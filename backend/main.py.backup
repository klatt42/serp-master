from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from dotenv import load_dotenv
import os
import sys

load_dotenv()

app = FastAPI(title="SERP Master API", version="0.0.1")

# CORS configuration
app.add_middleware(
    CORSMiddleware,
    allow_origins=os.getenv("CORS_ORIGINS", "http://localhost:3000").split(","),
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# Import and include routers
try:
    from routers.seo_routes import router as seo_router
    app.include_router(seo_router)
    print("‚úÖ SEO routes loaded successfully")
except Exception as e:
    print(f"‚ùå Failed to load SEO routes: {e}")
    import traceback
    traceback.print_exc()

@app.get("/")
async def root():
    return {
        "message": "SERP Master API",
        "version": "0.0.1",
        "status": "running"
    }

@app.get("/health")
async def health():
    return {"status": "healthy"}

@app.on_event("startup")
async def startup_event():
    print("\n" + "="*50)
    print("üöÄ SERP Master API Starting...")
    print("="*50)
    print(f"üìç Available routes:")
    for route in app.routes:
        if hasattr(route, 'methods'):
            print(f"   {list(route.methods)[0]:8} {route.path}")
    print("="*50 + "\n")

if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="0.0.0.0", port=8000)
